version: '3.9'
services:

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env_docker

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    environment:
      - API_URL=http://backend
    depends_on:
      - backend

  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend
      - frontend

  db:
    image: postgres:15.0
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env_docker
    # environment:
    #   - POSTGRES_PASSWORD=postgres
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_DB=vocebrew
    # command: ["postgres", "-c", "max_connections=300"]
    #   # - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=pg_password
    #   - POSTGRES_DB=vocebrew


volumes:
  static_value:
  media_value:
  postgres_data:
